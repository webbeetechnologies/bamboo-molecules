// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`button renders button with an accessibility hint 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityHint="hint"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Button with accessibility hint
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders button with an accessibility label 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityLabel="label"
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Button with accessibility label
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders button with color 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Custom Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders button with custom background color 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Custom Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders button with custom testID 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
          testID="custom:testID"
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Button with custom testID
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders contained contained with variant 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 24,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Contained Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders disabled button 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Disabled Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders loading button 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityRole="progressbar"
              accessibilityState={
                Object {
                  "busy": true,
                }
              }
              accessible={true}
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginLeft": 12,
                  "marginRight": -8,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "height": 26,
                    "opacity": 1,
                    "width": 26,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "justifyContent": "center",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 26,
                        "transform": Array [
                          Object {
                            "rotate": "45deg",
                          },
                        ],
                        "width": 26,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 13,
                          "overflow": "hidden",
                          "width": 26,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 26,
                            "transform": Array [
                              Object {
                                "translateY": 0,
                              },
                              Object {
                                "rotate": "-165deg",
                              },
                            ],
                            "width": 26,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          style={
                            Object {
                              "height": 13,
                              "overflow": "hidden",
                              "width": 26,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "borderColor": "rgba(103, 80, 164, 1)",
                                "borderRadius": 13,
                                "borderWidth": 2.6,
                                "height": 26,
                                "width": 26,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  collapsable={false}
                  style={
                    Object {
                      "alignItems": "center",
                      "bottom": 0,
                      "justifyContent": "center",
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 26,
                        "transform": Array [
                          Object {
                            "rotate": "45deg",
                          },
                        ],
                        "width": 26,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 13,
                          "overflow": "hidden",
                          "top": 13,
                          "width": 26,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 26,
                            "transform": Array [
                              Object {
                                "translateY": -13,
                              },
                              Object {
                                "rotate": "345deg",
                              },
                            ],
                            "width": 26,
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          style={
                            Object {
                              "height": 13,
                              "overflow": "hidden",
                              "width": 26,
                            }
                          }
                        >
                          <View
                            collapsable={false}
                            style={
                              Object {
                                "borderColor": "rgba(103, 80, 164, 1)",
                                "borderRadius": 13,
                                "borderWidth": 2.6,
                                "height": 26,
                                "width": 26,
                              }
                            }
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 16,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Loading Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders outlined button with variant 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderColor": "",
            "borderRadius": 750,
            "borderStyle": "solid",
            "borderWidth": 1,
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 24,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Outlined Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders text button by default 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Text Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`button renders text button with variant 1`] = `
<View>
  <View
    collapsable={false}
    style={
      Object {
        "alignSelf": undefined,
        "bottom": undefined,
        "left": undefined,
        "position": undefined,
        "right": undefined,
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 0,
        "top": undefined,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "shadowColor": "#000",
          "shadowOffset": Object {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
    >
      <View
        collapsable={false}
        focused={false}
        pressed={false}
        style={
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 750,
            "borderStyle": "solid",
            "flex": 1,
            "minWidth": 64,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 750,
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Object {
                  "alignItems": "center",
                  "color": "",
                  "display": "flex",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "500",
                  "letterSpacing": 0.1,
                  "lineHeight": 20,
                  "marginHorizontal": 12,
                  "marginVertical": 10,
                  "textAlign": "center",
                }
              }
            >
              Text Button
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
