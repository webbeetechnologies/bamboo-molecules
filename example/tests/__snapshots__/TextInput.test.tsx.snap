// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`correctly applies height to multiline Outline TextInput 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(255, 251, 254, 1)",
        "borderRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "backgroundColor": "rgba(255, 251, 254, 1)",
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 4,
          "borderWidth": 1,
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="text-input-outline"
    />
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        collapsable={false}
        onLayout={[Function]}
        pointerEvents="none"
        style={
          Object {
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0.25,
              },
            ],
            "zIndex": 3,
          }
        }
      >
        <Text
          collapsable={false}
          maxFontSizeMultiplier={15}
          numberOfLines={1}
          onLayout={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(255, 251, 254, 1)",
              "color": "rgba(73, 69, 79, 1)",
              "fontSize": 16,
              "fontWeight": "400",
              "left": 0,
              "lineHeight": 24,
              "marginLeft": -4,
              "opacity": 1,
              "paddingHorizontal": 4,
              "position": "absolute",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
                Object {
                  "scale": 0.75,
                },
              ],
            }
          }
          testID="text-input-label-active"
        >
          Outline Input
        </Text>
        <Text
          collapsable={false}
          maxFontSizeMultiplier={15}
          numberOfLines={1}
          style={
            Object {
              "color": "rgba(73, 69, 79, 1)",
              "fontSize": 16,
              "fontWeight": "400",
              "left": 0,
              "lineHeight": 24,
              "marginLeft": -4,
              "opacity": 0,
              "paddingHorizontal": 4,
              "position": "absolute",
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
                Object {
                  "scale": 0.75,
                },
              ],
            }
          }
          testID="text-input-label-inactive"
        >
          Outline Input
        </Text>
      </View>
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder=""
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 4,
              "paddingTop": 4,
            },
            Object {},
            Object {
              "paddingTop": 12,
            },
            Object {
              "textAlign": "left",
              "textAlignVertical": "top",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-outlined"
        underlineColorAndroid="transparent"
        value="Some test value"
      />
    </View>
  </View>
</View>
`;

exports[`renders button with flat variant 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(231, 224, 236, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "rgba(73, 69, 79, 1)",
          "bottom": 0,
          "height": 1,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "zIndex": 1,
        }
      }
      testID="text-input-underline"
    />
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 8,
              "paddingTop": 24,
            },
            Object {
              "height": 56,
            },
            false,
            Object {
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-flat"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`renders button with left element 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(231, 224, 236, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "rgba(73, 69, 79, 1)",
          "bottom": 0,
          "height": 1,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "zIndex": 1,
        }
      }
      testID="text-input-underline"
    />
    <View
      onLayout={[Function]}
      style={
        Object {
          "color": "rgba(73, 69, 79, 1)",
          "iconSize": 20,
          "justifyContent": "center",
          "marginLeft": -4,
          "marginRight": 12,
        }
      }
      testID="text-input-left-element"
    >
      {"name":"magnify","type":"material-community"}
    </View>
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 8,
              "paddingTop": 24,
            },
            Object {
              "height": 56,
            },
            false,
            Object {
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-flat"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`renders button with outlined variant 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(255, 251, 254, 1)",
        "borderRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      pointerEvents="none"
      style={
        Object {
          "backgroundColor": "rgba(255, 251, 254, 1)",
          "borderColor": "rgba(121, 116, 126, 1)",
          "borderRadius": 4,
          "borderWidth": 1,
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="text-input-outline"
    />
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 4,
              "paddingTop": 4,
            },
            Object {
              "height": 56,
            },
            false,
            Object {
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-outlined"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;

exports[`renders button with right element 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(231, 224, 236, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "rgba(73, 69, 79, 1)",
          "bottom": 0,
          "height": 1,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "zIndex": 1,
        }
      }
      testID="text-input-underline"
    />
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 8,
              "paddingTop": 24,
            },
            Object {
              "height": 56,
            },
            false,
            Object {
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-flat"
        underlineColorAndroid="transparent"
      />
    </View>
    <View
      style={
        Object {
          "color": "rgba(73, 69, 79, 1)",
          "iconSize": 24,
          "justifyContent": "center",
          "marginLeft": 12,
          "marginRight": -4,
        }
      }
      testID="text-input-right-element"
    >
      {"name":"magnify","type":"material-community"}
    </View>
  </View>
</View>
`;

exports[`renders text button by default 1`] = `
<View
  style={Object {}}
>
  <View
    style={
      Object {
        "animationScale": 1,
        "backgroundColor": "rgba(231, 224, 236, 1)",
        "borderTopLeftRadius": 4,
        "borderTopRightRadius": 4,
        "flexDirection": "row",
        "paddingHorizontal": 16,
      }
    }
  >
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "rgba(73, 69, 79, 1)",
          "bottom": 0,
          "height": 1,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "zIndex": 1,
        }
      }
      testID="text-input-underline"
    />
    <View
      style={
        Object {
          "flexGrow": 1,
          "minHeight": 56,
          "paddingBottom": 0,
          "paddingTop": 0,
        }
      }
    >
      <TextInput
        editable={true}
        maxFontSizeMultiplier={15}
        multiline={false}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholderTextColor="rgba(73, 69, 79, 1)"
        size="md"
        style={
          Array [
            Object {
              "color": "rgba(28, 27, 31, 1)",
              "flexGrow": 1,
              "fontSize": 16,
              "fontWeight": "400",
              "lineHeight": 24,
              "paddingBottom": 8,
              "paddingTop": 24,
            },
            Object {
              "height": 56,
            },
            false,
            Object {
              "textAlign": "left",
              "textAlignVertical": "center",
            },
            false,
            undefined,
          ]
        }
        testID="text-input-flat"
        underlineColorAndroid="transparent"
      />
    </View>
  </View>
</View>
`;
