// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionList renders OptionList with SearchField 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 8,
      }
    }
  >
    <View
      style={Object {}}
    >
      <View
        style={
          Object {
            "animationScale": 1,
            "backgroundColor": "rgba(231, 224, 236, 1)",
            "borderTopLeftRadius": 4,
            "borderTopRightRadius": 4,
            "flexDirection": "row",
            "paddingHorizontal": 16,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "backgroundColor": "rgba(73, 69, 79, 1)",
              "bottom": 0,
              "height": 1,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "zIndex": 1,
            }
          }
          testID="text-input-underline"
        />
        <View
          style={
            Object {
              "flexGrow": 1,
              "flexShrink": 1,
              "minHeight": 56,
              "paddingBottom": 0,
              "paddingTop": 0,
            }
          }
        >
          <TextInput
            editable={true}
            maxFontSizeMultiplier={15}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholderTextColor="rgba(73, 69, 79, 1)"
            size="md"
            style={
              Array [
                Object {
                  "color": "rgba(28, 27, 31, 1)",
                  "flexGrow": 1,
                  "fontSize": 16,
                  "fontWeight": "400",
                  "lineHeight": 24,
                  "paddingBottom": 8,
                  "paddingTop": 24,
                },
                Object {
                  "height": 56,
                },
                false,
                Object {
                  "textAlign": "left",
                  "textAlignVertical": "center",
                },
                false,
                undefined,
              ]
            }
            testID="text-input-flat"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
        <View
          style={
            Object {
              "color": "rgba(73, 69, 79, 1)",
              "iconSize": 24,
              "justifyContent": "center",
              "marginLeft": 12,
              "marginRight": -4,
            }
          }
          testID="text-input-right-element"
        >
          <View>
            <View
              collapsable={false}
              style={
                Object {
                  "alignSelf": undefined,
                  "bottom": undefined,
                  "left": undefined,
                  "position": undefined,
                  "right": undefined,
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 0,
                    "width": 0,
                  },
                  "shadowOpacity": 0,
                  "shadowRadius": 0,
                  "top": undefined,
                }
              }
            >
              <View
                collapsable={false}
                style={
                  Object {
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 0,
                      "width": 0,
                    },
                    "shadowOpacity": 0,
                    "shadowRadius": 0,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "borderColor": "rgba(121, 116, 126, 1)",
                      "borderRadius": 750,
                      "borderWidth": undefined,
                      "height": 36,
                      "margin": undefined,
                      "overflow": "hidden",
                      "width": 36,
                    }
                  }
                >
                  <View
                    accessibilityRole="button"
                    accessibilityState={
                      Object {
                        "disabled": false,
                      }
                    }
                    accessible={true}
                    focusable={true}
                    hitSlop={
                      Object {
                        "bottom": 6,
                        "left": 6,
                        "right": 6,
                        "top": 6,
                      }
                    }
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        },
                      ]
                    }
                  >
                    <Text
                      color="rgba(73, 69, 79, 1)"
                      name="magnify"
                      size={24}
                      style={
                        Object {
                          "animationScale": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "id": "1",
              "text": "1",
            },
            Object {
              "id": "2",
              "text": "2",
            },
            Object {
              "id": "3",
              "text": "3",
            },
            Object {
              "id": "4",
              "text": "4",
            },
          ],
          "title": "Numbers",
        },
        Object {
          "data": Array [
            Object {
              "id": "A",
              "text": "A",
            },
            Object {
              "id": "B",
              "text": "B",
            },
            Object {
              "id": "C",
              "text": "C",
            },
            Object {
              "id": "D",
              "text": "D",
            },
          ],
          "title": "Letters",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        0,
        6,
      ]
    }
    style={Object {}}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          1
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          2
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          3
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          4
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          A
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          B
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          C
        </Text>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`OptionList renders OptionList with selectable items 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "id": "1",
              "text": "1",
            },
            Object {
              "id": "2",
              "text": "2",
            },
            Object {
              "id": "3",
              "text": "3",
            },
            Object {
              "id": "4",
              "text": "4",
            },
          ],
          "title": "Numbers",
        },
        Object {
          "data": Array [
            Object {
              "id": "A",
              "text": "A",
            },
            Object {
              "id": "B",
              "text": "B",
            },
            Object {
              "id": "C",
              "text": "C",
            },
            Object {
              "id": "D",
              "text": "D",
            },
          ],
          "title": "Letters",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onSelectItemChange={[MockFunction]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        0,
        6,
      ]
    }
    style={Object {}}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            1
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            2
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            3
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            4
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            A
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            B
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              false,
              Object {},
            ]
          }
        >
          <Text>
            C
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`OptionList renders default OptionList with records 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "data": Array [
            Object {
              "id": "1",
              "text": "1",
            },
            Object {
              "id": "2",
              "text": "2",
            },
            Object {
              "id": "3",
              "text": "3",
            },
            Object {
              "id": "4",
              "text": "4",
            },
          ],
          "title": "Numbers",
        },
        Object {
          "data": Array [
            Object {
              "id": "A",
              "text": "A",
            },
            Object {
              "id": "B",
              "text": "B",
            },
            Object {
              "id": "C",
              "text": "C",
            },
            Object {
              "id": "D",
              "text": "D",
            },
          ],
          "title": "Letters",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        0,
        6,
      ]
    }
    style={Object {}}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          1
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          2
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          3
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          4
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          A
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          B
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text>
          C
        </Text>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;
