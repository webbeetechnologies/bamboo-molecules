// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioButton RadioButton with custom testID renders properly 1`] = `
<View
  accessibilityLiveRegion="polite"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "overflow": "hidden",
      },
      Object {
        "borderRadius": 18,
        "padding": 6,
      },
    ]
  }
  testID="custom:testID"
>
  <View
    style={
      Object {
        "opacity": 0,
      }
    }
  >
    <Text
      allowFontScaling={false}
      color="rgba(73, 69, 79, 1)"
      name="check"
      size={24}
      style={
        Object {
          "animationScale": 1,
        }
      }
    />
  </View>
</View>
`;

exports[`RadioButton on default platform renders properly 1`] = `
<View
  accessibilityLiveRegion="polite"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": false,
      "disabled": false,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "overflow": "hidden",
      },
      Object {
        "borderRadius": 18,
        "padding": 6,
      },
    ]
  }
>
  <View
    style={
      Object {
        "opacity": 0,
      }
    }
  >
    <Text
      allowFontScaling={false}
      color="rgba(73, 69, 79, 1)"
      name="check"
      size={24}
      style={
        Object {
          "animationScale": 1,
        }
      }
    />
  </View>
</View>
`;

exports[`RadioButton when RadioButton is wrapped by RadioButtonContext.Provider renders properly 1`] = `
<View
  accessibilityLiveRegion="polite"
  accessibilityRole="radio"
  accessibilityState={
    Object {
      "checked": true,
      "disabled": false,
    }
  }
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "overflow": "hidden",
      },
      Object {
        "borderRadius": 18,
        "padding": 6,
      },
    ]
  }
>
  <View
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={false}
      color="rgba(103, 80, 164, 1)"
      name="check"
      size={24}
      style={
        Object {
          "animationScale": 1,
        }
      }
    />
  </View>
</View>
`;
